<resources>
    <string name="app_name">MyCryptographer</string>
    <string name="main_menu_text">code</string>
    <string name="encrypt">Зашифровать</string>
    <string name="decrypt">Дешифровать</string>
    <string name="copy">Скопировать</string>
    <string name="paste">Вставить</string>
    <string name="clear">Очистить</string>

    <string name="algorithm_eXT">Алгоритм eXT*</string>
    <string name="algorithm_Caesar">Алгоритм Цезаря</string>
    <string name="algorithm_Des">Шифрование DES</string>
    <string name="algorithm_Aes">Шифрование AES</string>
    <string name="algorithm_BlowFish">Шифрование BlowFish</string>
    <string name="algorithm_Switch_Char">Замена букв</string>
    <string name="Customization">Интерфейс</string>
    <string name="About_Program">О программе</string>

    <string name="Введите_текст">Введите текст</string>
    <string name="Введите_Пароль">Введите Пароль</string>
    <string name="Ваш_шифр">Ваш шифр</string>

    <string name="theme_title">Themes:</string>
    <string name="light_theme">Dark theme</string>
    <string name="dark_theme">Light theme</string>
    <string name="system_theme">Use system theme</string>
    <string name="battery_saver_theme">Battery saver theme</string>

    <string name="navigation_drawer_open">navigation_drawer_open</string>
    <string name="navigation_drawer_close">navigation_drawer_close</string>
    <string name="vk_name_group">Red Line Linux</string>
    <string name="vk_link">https://vk.com/red_line_linux</string>
    <string name="github_link">https://github.com/eXTrimeXT/MyApkFiles/blob/main/MyCryptographer.apk</string>
    <string name="nav_header_desc">Navigation header</string>
    <string name="menu_Algorithms">Algorithms</string>
    <string name="menu_Ciphers">Ciphers</string>
    <string name="menu_Settings">Settings</string>
    <string name="menu_About">About Program</string>

    <string name="about_program">
        Благодаря программе \"Criptographer\" вы можете
        преобразовывать ваши секретные сообщения в различного рода шифры.
        \n\nВам необходимо выбрать метод шифрования и придумать ключ.
        \n\nВ этой версии(1.0) программы представлено:
        \n4 вида шифрования,
        \n2 алгоритма и,
        \nкак дополнение, "Замена букв".
    </string>
    <string name="eXT_About">
        Это мой собственный алгоритм шифрования!!!
        \nЕсли вы хотите зашифровать сообщение, то вам нужно:
        \nВыбрать метод(четный или нечетный), потом ввести пароль и выбрать один из предложенных ключей.
        \nДля дешифровки вы должны:
        \nВыбрать противоположный метод, который у вас был при шифровании.
        \nНапример, у вас был четный, для дешифровки нужен нечетный, и наоборот.
        \nАлгоритм еще находится в разработке…
    </string>
    <string name="DES_About">
        DES (англ. Data Encryption Standard) — алгоритм
        \nдля симметричного
        шифрования, разработанный фирмой IBM и утверждённый правительством
        США в 1977 году как официальный стандарт.
        \nРазмер блока для DES равен 64 битам.
        \nВ основе алгоритма лежит сеть Фейстеля с 16 циклами (раундами) и ключом,
        имеющим длину 56 бит.
        \nАлгоритм использует комбинацию нелинейных (S-блоки)
        и линейных (перестановки E, IP, IP-1) преобразований.
    </string>

    <string name="RSA_About">
        Данный шифр можно использовать для первоначального анонимного общения в сети.
        Он отлично подойдет для обмена ключами от других алгоритмов и шифров.
        RSA — криптографический алгоритм с открытым ключом,
        основывающийся на вычислительной сложности задачи факторизации больших целых чисел.
        Криптосистема RSA стала первой системой, пригодной и для шифрования, и для цифровой подписи.
        \n * Как пользоваться? *\n
        * Создать ПУБЛИЧНЫЙ ключ.\n
        * Дать ключ другу.\n
        * Друг зашифрует сообщение публичным ключом и передаст вам зашифрованное сообщение.\n
        * Используя ПРИВАТНЫЙ ключ, вы расшифруете зашифрованное сообщение.\n
        * Главное: публичный ключ можно дать кому угодно, а приватный должен быть только у вас!
    </string>

    <!--    <string name="writeRotor">Введите ротор (от 1 до 8 включительно):</string>-->
    <!--    <string name="writeReflector">Введите отражатель (A, B, C):</string>-->
    <!--    <string name="writeCall">Введите настройки звонка (от 1 до 28 включительно):</string>-->
    <!--    <string name="writeStartPosForCall">Введите начальные позиции звонка (от A до Z):</string>-->
    <!--    <string name="writePairOfSockets">Введите пары розеток (например, AA, AB...ZX, ZZ):</string>-->
    <!--    <string name="writeMessage">Ваше сообщение:</string>-->

    <string name="AES_About">
        AES, Advanced Encryption Standard (AES), также известный как Rijndael —
        \nсимметричный алгоритм блочного шифрования (размер блока 128 бит,
        \nключ 128/192/256 бит), принятый в качестве
        \nстандарта шифрования правительством США по результатам конкурса AES.
        \nЭтот алгоритм хорошо проанализирован и сейчас широко используется,
        \nкак это было с его предшественником DES. Национальный институт
        \nстандартов и технологий США
        \n(англ. National Institute of Standards and Technology, NIST)
        \n опубликовал спецификацию AES 26 ноября 2001 года после
        \пятилетнего периода, в ходе которого были созданы и оценены
        \n15 кандидатур. 26 мая 2002 года AES был объявлен стандартом
        \nшифрования. По состоянию на 2009 год AES является одним из самых
        \nраспространённых алгоритмов симметричного шифрования.
        \nПоддержка ускорения AES была введена фирмой Intel в семейство
        \nпроцессоров x86 начиная с Arrandale в 2010 году, а затем на
        \nпроцессорах Sandy Bridge; фирмой AMD - в Bulldozer с 2011 года.
    </string>

    <!--    <string name="RSA_About">RSA — криптографический алгоритм с-->
    <!--        открытым ключом, основывающийся на вычислительной сложности задачи-->
    <!--        факторизации больших целых чисел. Криптосистема RSA стала-->
    <!--        первой системой, пригодной и для шифрования, и для цифровой подписи.-->
    <!--    </string>-->

    <string name="BlowFish_About">
        Blowfish — криптографический алгоритм,
        \nреализующий блочное симметричное шифрование с переменной
        \nдлиной ключа. Разработан Брюсом Шнайером в 1993 году.
        \nПредставляет собой сеть Фейстеля. Выполнен на простых и быстрых операциях:
        \nXOR, подстановка, сложение. Является незапатентованным и свободно распространяемым.
    </string>

    <string name="Caesar_About">
        Шифр Цезаря, также известный как шифр сдвига, код Цезаря или сдвиг Цезаря —
        \nодин из самых простых и наиболее широко известных методов шифрования.
        \nШифр Цезаря — это вид шифра подстановки, в котором каждый символ в
        \nоткрытом тексте заменяется символом, находящимся
        \nна некотором постоянном числе позиций левее или правее него в алфавите.
        \nНапример, в шифре со сдвигом вправо на 3, \"А\" была
        \nбы заменена на \"Г\", \"Б\" станет \'Д\", и так далее.
        \nШифр назван в честь римского полководца Гая Юлия Цезаря, использовавшего
        \nего для секретной переписки со своими генералами.
        \nШаг шифрования, выполняемый шифром Цезаря, часто включается как
        \nчасть более сложных схем, таких как шифр Виженера.
        \n\nДанный алгоритм доступен только для русских букв, но в скором вренени появятся и английские символы.
    </string>
    <string name="SwitchChar_About">
        \"Замена букв\" является приятным дополнением к остальным методам шифрования.
        \nХоть оно может показаться незначительным, но на самом деле благодаря
        этому дополнению вы можете усложнить свой шифр.
        \nДобавив в него частицу запутанности…
    </string>

</resources>